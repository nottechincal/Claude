{
  "permissions": {
    "allow": [
      "Bash(powershell -ExecutionPolicy Bypass -File vapi-deploy-all-tools.ps1)",
      "Bash(powershell -Command \"\n$ApiKey = ''4000447a-37e5-4aa6-b7b3-e692bec2706f''\n$WebhookUrl = ''https://surveyable-natisha-unsacred.ngrok-free.dev/webhook''\n$Headers = @{\n    ''Authorization'' = ''Bearer '' + $ApiKey\n    ''Content-Type'' = ''application/json''\n}\n\n# Fix setItemProperty\n$body1 = @{\n    type = ''function''\n    function = @{\n        name = ''setItemProperty''\n        description = ''Set a property on the item currently being configured''\n        strict = $false\n        parameters = @{\n            type = ''object''\n            properties = @{\n                field = @{\n                    type = ''string''\n                    description = ''Property name to set''\n                    enum = @(''size'', ''protein'', ''salads'', ''sauces'', ''extras'', ''cheese'', ''brand'', ''variant'', ''salt_type'', ''sauce_type'', ''quantity'')\n                }\n                value = @{\n                    type = @(''string'', ''array'', ''boolean'', ''number'')\n                    description = ''Value to set''\n                }\n            }\n            required = @(''field'', ''value'')\n        }\n    }\n    async = $false\n    server = @{url = $WebhookUrl}\n}\n\n$json1 = $body1 | ConvertTo-Json -Depth 10 -Compress\n$result1 = Invoke-RestMethod -Method Post -Uri ''https://api.vapi.ai/tool'' -Headers $Headers -Body $json1\nWrite-Host ''setItemProperty created: '' $result1.id -ForegroundColor Green\n\n# Fix editCartItem\n$body2 = @{\n    type = ''function''\n    function = @{\n        name = ''editCartItem''\n        description = ''Edit existing cart item properties''\n        strict = $false\n        parameters = @{\n            type = ''object''\n            properties = @{\n                itemIndex = @{\n                    type = ''number''\n                    description = ''Index of item to edit''\n                }\n                field = @{\n                    type = ''string''\n                    description = ''Field to edit''\n                    enum = @(''salads'', ''sauces'', ''extras'', ''cheese'', ''salt_type'', ''quantity'')\n                }\n                value = @{\n                    type = @(''string'', ''array'', ''boolean'', ''number'')\n                    description = ''New value''\n                }\n            }\n            required = @(''itemIndex'', ''field'', ''value'')\n        }\n    }\n    async = $false\n    server = @{url = $WebhookUrl}\n}\n\n$json2 = $body2 | ConvertTo-Json -Depth 10 -Compress\n$result2 = Invoke-RestMethod -Method Post -Uri ''https://api.vapi.ai/tool'' -Headers $Headers -Body $json2\nWrite-Host ''editCartItem created: '' $result2.id -ForegroundColor Green\n\n# Get current assistant\n$assistant = Invoke-RestMethod -Method Get -Uri ''https://api.vapi.ai/assistant/320f76b1-140a-412c-b95f-252032911ca3'' -Headers $Headers\n\n# Add the 2 new tool IDs to existing toolIds\n$allToolIds = $assistant.model.toolIds + @($result1.id, $result2.id)\n\n# Update assistant\n$updateBody = @{\n    model = @{\n        provider = $assistant.model.provider\n        model = $assistant.model.model\n        toolIds = $allToolIds\n    }\n}\n\n$json3 = $updateBody | ConvertTo-Json -Depth 10\n$finalResult = Invoke-RestMethod -Method Patch -Uri ''https://api.vapi.ai/assistant/320f76b1-140a-412c-b95f-252032911ca3'' -Headers $Headers -Body $json3\nWrite-Host ''Assistant updated with all tools!'' -ForegroundColor Green\nWrite-Host ''Total tools: '' $allToolIds.Count -ForegroundColor Cyan\n\")",
      "Bash(powershell -ExecutionPolicy Bypass -File fix-missing-tools.ps1)",
      "Bash(powershell -Command \"\n$ApiKey = ''4000447a-37e5-4aa6-b7b3-e692bec2706f''\n$Headers = @{''Authorization'' = ''Bearer '' + $ApiKey; ''Content-Type'' = ''application/json''}\n$tools = Invoke-RestMethod -Method Get -Uri ''https://api.vapi.ai/tool'' -Headers $Headers\nWrite-Host ''Total tools deployed:'' $tools.Count -ForegroundColor Cyan\nWrite-Host ''''\nWrite-Host ''Tool List:'' -ForegroundColor Yellow\n$tools | ForEach-Object { Write-Host ''  -'' $_.function.name }\n\")",
      "Bash(powershell:*)"
    ],
    "deny": [],
    "ask": []
  }
}
